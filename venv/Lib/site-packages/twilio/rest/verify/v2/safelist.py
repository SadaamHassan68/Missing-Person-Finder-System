<<<<<<< HEAD
r"""
    This code was generated by
   ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Verify
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""

from typing import Any, Dict, Optional
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
<<<<<<< HEAD
from twilio.base.version import Version


class SafelistInstance(InstanceResource):
    """
    :ivar sid: The unique string that we created to identify the SafeList resource.
    :ivar phone_number: The phone number in SafeList.
    :ivar url: The absolute URL of the SafeList resource.
    """

    def __init__(
        self,
        version: Version,
        payload: Dict[str, Any],
        phone_number: Optional[str] = None,
    ):
        super().__init__(version)

        self.sid: Optional[str] = payload.get("sid")
        self.phone_number: Optional[str] = payload.get("phone_number")
        self.url: Optional[str] = payload.get("url")

        self._solution = {
            "phone_number": phone_number or self.phone_number,
        }
        self._context: Optional[SafelistContext] = None

    @property
    def _proxy(self) -> "SafelistContext":
        """
        Generate an instance context for the instance, the context is capable of
        performing various actions. All instance actions are proxied to the context

        :returns: SafelistContext for this SafelistInstance
        """
        if self._context is None:
            self._context = SafelistContext(
                self._version,
                phone_number=self._solution["phone_number"],
            )
        return self._context

    def delete(self) -> bool:
        """
        Deletes the SafelistInstance


        :returns: True if delete succeeds, False otherwise
        """
        return self._proxy.delete()

    async def delete_async(self) -> bool:
        """
        Asynchronous coroutine that deletes the SafelistInstance


        :returns: True if delete succeeds, False otherwise
        """
        return await self._proxy.delete_async()

    def fetch(self) -> "SafelistInstance":
        """
        Fetch the SafelistInstance


        :returns: The fetched SafelistInstance
        """
        return self._proxy.fetch()

    async def fetch_async(self) -> "SafelistInstance":
        """
        Asynchronous coroutine to fetch the SafelistInstance


        :returns: The fetched SafelistInstance
        """
        return await self._proxy.fetch_async()

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """
        context = " ".join("{}={}".format(k, v) for k, v in self._solution.items())
        return "<Twilio.Verify.V2.SafelistInstance {}>".format(context)


class SafelistContext(InstanceContext):

    def __init__(self, version: Version, phone_number: str):
        """
        Initialize the SafelistContext

        :param version: Version that contains the resource
        :param phone_number: The phone number to be fetched from SafeList. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
        """
        super().__init__(version)

        # Path Solution
        self._solution = {
            "phone_number": phone_number,
        }
        self._uri = "/SafeList/Numbers/{phone_number}".format(**self._solution)

    def delete(self) -> bool:
        """
        Deletes the SafelistInstance


        :returns: True if delete succeeds, False otherwise
        """

        headers = values.of({})

        return self._version.delete(method="DELETE", uri=self._uri, headers=headers)

    async def delete_async(self) -> bool:
        """
        Asynchronous coroutine that deletes the SafelistInstance


        :returns: True if delete succeeds, False otherwise
        """

        headers = values.of({})

        return await self._version.delete_async(
            method="DELETE", uri=self._uri, headers=headers
        )

    def fetch(self) -> SafelistInstance:
        """
        Fetch the SafelistInstance


        :returns: The fetched SafelistInstance
        """

        headers = values.of({})

        headers["Accept"] = "application/json"

        payload = self._version.fetch(method="GET", uri=self._uri, headers=headers)

        return SafelistInstance(
            self._version,
            payload,
            phone_number=self._solution["phone_number"],
        )

    async def fetch_async(self) -> SafelistInstance:
        """
        Asynchronous coroutine to fetch the SafelistInstance


        :returns: The fetched SafelistInstance
        """

        headers = values.of({})

        headers["Accept"] = "application/json"

        payload = await self._version.fetch_async(
            method="GET", uri=self._uri, headers=headers
        )

        return SafelistInstance(
            self._version,
            payload,
            phone_number=self._solution["phone_number"],
        )

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """
        context = " ".join("{}={}".format(k, v) for k, v in self._solution.items())
        return "<Twilio.Verify.V2.SafelistContext {}>".format(context)


class SafelistList(ListResource):

    def __init__(self, version: Version):
        """
        Initialize the SafelistList

        :param version: Version that contains the resource

        """
        super().__init__(version)

        self._uri = "/SafeList/Numbers"

    def create(self, phone_number: str) -> SafelistInstance:
        """
        Create the SafelistInstance

        :param phone_number: The phone number to be added in SafeList. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).

        :returns: The created SafelistInstance
        """

        data = values.of(
            {
                "PhoneNumber": phone_number,
            }
        )
        headers = values.of({"Content-Type": "application/x-www-form-urlencoded"})

        headers["Content-Type"] = "application/x-www-form-urlencoded"

        headers["Accept"] = "application/json"

        payload = self._version.create(
            method="POST", uri=self._uri, data=data, headers=headers
        )

        return SafelistInstance(self._version, payload)

    async def create_async(self, phone_number: str) -> SafelistInstance:
        """
        Asynchronously create the SafelistInstance

        :param phone_number: The phone number to be added in SafeList. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).

        :returns: The created SafelistInstance
        """

        data = values.of(
            {
                "PhoneNumber": phone_number,
            }
        )
        headers = values.of({"Content-Type": "application/x-www-form-urlencoded"})

        headers["Content-Type"] = "application/x-www-form-urlencoded"

        headers["Accept"] = "application/json"

        payload = await self._version.create_async(
            method="POST", uri=self._uri, data=data, headers=headers
        )

        return SafelistInstance(self._version, payload)

    def get(self, phone_number: str) -> SafelistContext:
        """
        Constructs a SafelistContext

        :param phone_number: The phone number to be fetched from SafeList. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
        """
        return SafelistContext(self._version, phone_number=phone_number)

    def __call__(self, phone_number: str) -> SafelistContext:
        """
        Constructs a SafelistContext

        :param phone_number: The phone number to be fetched from SafeList. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
        """
        return SafelistContext(self._version, phone_number=phone_number)

    def __repr__(self) -> str:
=======
from twilio.base.page import Page


class SafelistList(ListResource):
    """ PLEASE NOTE that this class contains beta products that are subject to
    change. Use them with caution. """

    def __init__(self, version):
        """
        Initialize the SafelistList

        :param Version version: Version that contains the resource

        :returns: twilio.rest.verify.v2.safelist.SafelistList
        :rtype: twilio.rest.verify.v2.safelist.SafelistList
        """
        super(SafelistList, self).__init__(version)

        # Path Solution
        self._solution = {}
        self._uri = '/SafeList/Numbers'.format(**self._solution)

    def create(self, phone_number):
        """
        Create the SafelistInstance

        :param unicode phone_number: The phone number to be added in SafeList.

        :returns: The created SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistInstance
        """
        data = values.of({'PhoneNumber': phone_number, })

        payload = self._version.create(method='POST', uri=self._uri, data=data, )

        return SafelistInstance(self._version, payload, )

    def get(self, phone_number):
        """
        Constructs a SafelistContext

        :param phone_number: The phone number to be fetched from SafeList.

        :returns: twilio.rest.verify.v2.safelist.SafelistContext
        :rtype: twilio.rest.verify.v2.safelist.SafelistContext
        """
        return SafelistContext(self._version, phone_number=phone_number, )

    def __call__(self, phone_number):
        """
        Constructs a SafelistContext

        :param phone_number: The phone number to be fetched from SafeList.

        :returns: twilio.rest.verify.v2.safelist.SafelistContext
        :rtype: twilio.rest.verify.v2.safelist.SafelistContext
        """
        return SafelistContext(self._version, phone_number=phone_number, )

    def __repr__(self):
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
        """
        Provide a friendly representation

        :returns: Machine friendly representation
<<<<<<< HEAD
        """
        return "<Twilio.Verify.V2.SafelistList>"
=======
        :rtype: str
        """
        return '<Twilio.Verify.V2.SafelistList>'


class SafelistPage(Page):
    """ PLEASE NOTE that this class contains beta products that are subject to
    change. Use them with caution. """

    def __init__(self, version, response, solution):
        """
        Initialize the SafelistPage

        :param Version version: Version that contains the resource
        :param Response response: Response from the API

        :returns: twilio.rest.verify.v2.safelist.SafelistPage
        :rtype: twilio.rest.verify.v2.safelist.SafelistPage
        """
        super(SafelistPage, self).__init__(version, response)

        # Path Solution
        self._solution = solution

    def get_instance(self, payload):
        """
        Build an instance of SafelistInstance

        :param dict payload: Payload response from the API

        :returns: twilio.rest.verify.v2.safelist.SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistInstance
        """
        return SafelistInstance(self._version, payload, )

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Verify.V2.SafelistPage>'


class SafelistContext(InstanceContext):
    """ PLEASE NOTE that this class contains beta products that are subject to
    change. Use them with caution. """

    def __init__(self, version, phone_number):
        """
        Initialize the SafelistContext

        :param Version version: Version that contains the resource
        :param phone_number: The phone number to be fetched from SafeList.

        :returns: twilio.rest.verify.v2.safelist.SafelistContext
        :rtype: twilio.rest.verify.v2.safelist.SafelistContext
        """
        super(SafelistContext, self).__init__(version)

        # Path Solution
        self._solution = {'phone_number': phone_number, }
        self._uri = '/SafeList/Numbers/{phone_number}'.format(**self._solution)

    def fetch(self):
        """
        Fetch the SafelistInstance

        :returns: The fetched SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistInstance
        """
        payload = self._version.fetch(method='GET', uri=self._uri, )

        return SafelistInstance(self._version, payload, phone_number=self._solution['phone_number'], )

    def delete(self):
        """
        Deletes the SafelistInstance

        :returns: True if delete succeeds, False otherwise
        :rtype: bool
        """
        return self._version.delete(method='DELETE', uri=self._uri, )

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Verify.V2.SafelistContext {}>'.format(context)


class SafelistInstance(InstanceResource):
    """ PLEASE NOTE that this class contains beta products that are subject to
    change. Use them with caution. """

    def __init__(self, version, payload, phone_number=None):
        """
        Initialize the SafelistInstance

        :returns: twilio.rest.verify.v2.safelist.SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistInstance
        """
        super(SafelistInstance, self).__init__(version)

        # Marshaled Properties
        self._properties = {
            'sid': payload.get('sid'),
            'phone_number': payload.get('phone_number'),
            'url': payload.get('url'),
        }

        # Context
        self._context = None
        self._solution = {'phone_number': phone_number or self._properties['phone_number'], }

    @property
    def _proxy(self):
        """
        Generate an instance context for the instance, the context is capable of
        performing various actions.  All instance actions are proxied to the context

        :returns: SafelistContext for this SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistContext
        """
        if self._context is None:
            self._context = SafelistContext(self._version, phone_number=self._solution['phone_number'], )
        return self._context

    @property
    def sid(self):
        """
        :returns: The unique string that identifies the resource.
        :rtype: unicode
        """
        return self._properties['sid']

    @property
    def phone_number(self):
        """
        :returns: The phone number in SafeList.
        :rtype: unicode
        """
        return self._properties['phone_number']

    @property
    def url(self):
        """
        :returns: The absolute URL of the SafeList resource.
        :rtype: unicode
        """
        return self._properties['url']

    def fetch(self):
        """
        Fetch the SafelistInstance

        :returns: The fetched SafelistInstance
        :rtype: twilio.rest.verify.v2.safelist.SafelistInstance
        """
        return self._proxy.fetch()

    def delete(self):
        """
        Deletes the SafelistInstance

        :returns: True if delete succeeds, False otherwise
        :rtype: bool
        """
        return self._proxy.delete()

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Verify.V2.SafelistInstance {}>'.format(context)
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
