<<<<<<< HEAD
r"""
    This code was generated by
   ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Accounts
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""

from datetime import datetime
from typing import Any, Dict, Optional
from twilio.base import deserialize, values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.version import Version


class AuthTokenPromotionInstance(InstanceResource):
    """
    :ivar account_sid: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the secondary Auth Token was created for.
    :ivar auth_token: The promoted Auth Token that must be used to authenticate future API requests.
    :ivar date_created: The date and time in UTC when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    :ivar date_updated: The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    :ivar url: The URI for this resource, relative to `https://accounts.twilio.com`
    """

    def __init__(self, version: Version, payload: Dict[str, Any]):
        super().__init__(version)

        self.account_sid: Optional[str] = payload.get("account_sid")
        self.auth_token: Optional[str] = payload.get("auth_token")
        self.date_created: Optional[datetime] = deserialize.iso8601_datetime(
            payload.get("date_created")
        )
        self.date_updated: Optional[datetime] = deserialize.iso8601_datetime(
            payload.get("date_updated")
        )
        self.url: Optional[str] = payload.get("url")

        self._context: Optional[AuthTokenPromotionContext] = None

    @property
    def _proxy(self) -> "AuthTokenPromotionContext":
        """
        Generate an instance context for the instance, the context is capable of
        performing various actions. All instance actions are proxied to the context

        :returns: AuthTokenPromotionContext for this AuthTokenPromotionInstance
        """
        if self._context is None:
            self._context = AuthTokenPromotionContext(
                self._version,
            )
        return self._context

    def update(self) -> "AuthTokenPromotionInstance":
        """
        Update the AuthTokenPromotionInstance


        :returns: The updated AuthTokenPromotionInstance
        """
        return self._proxy.update()

    async def update_async(self) -> "AuthTokenPromotionInstance":
        """
        Asynchronous coroutine to update the AuthTokenPromotionInstance


        :returns: The updated AuthTokenPromotionInstance
        """
        return await self._proxy.update_async()

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """

        return "<Twilio.Accounts.V1.AuthTokenPromotionInstance>"


class AuthTokenPromotionContext(InstanceContext):

    def __init__(self, version: Version):
        """
        Initialize the AuthTokenPromotionContext

        :param version: Version that contains the resource
        """
        super().__init__(version)

        self._uri = "/AuthTokens/Promote"

    def update(self) -> AuthTokenPromotionInstance:
        """
        Update the AuthTokenPromotionInstance


        :returns: The updated AuthTokenPromotionInstance
        """

        data = values.of({})
        headers = values.of({})

        headers["Accept"] = "application/json"

        payload = self._version.update(
            method="POST", uri=self._uri, data=data, headers=headers
        )

        return AuthTokenPromotionInstance(self._version, payload)

    async def update_async(self) -> AuthTokenPromotionInstance:
        """
        Asynchronous coroutine to update the AuthTokenPromotionInstance


        :returns: The updated AuthTokenPromotionInstance
        """

        data = values.of({})
        headers = values.of({})

        headers["Accept"] = "application/json"

        payload = await self._version.update_async(
            method="POST", uri=self._uri, data=data, headers=headers
        )

        return AuthTokenPromotionInstance(self._version, payload)

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """

        return "<Twilio.Accounts.V1.AuthTokenPromotionContext>"
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base import deserialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.page import Page
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a


class AuthTokenPromotionList(ListResource):

<<<<<<< HEAD
    def __init__(self, version: Version):
        """
        Initialize the AuthTokenPromotionList

        :param version: Version that contains the resource

        """
        super().__init__(version)

    def get(self) -> AuthTokenPromotionContext:
        """
        Constructs a AuthTokenPromotionContext

        """
        return AuthTokenPromotionContext(self._version)

    def __call__(self) -> AuthTokenPromotionContext:
        """
        Constructs a AuthTokenPromotionContext

        """
        return AuthTokenPromotionContext(self._version)

    def __repr__(self) -> str:
=======
    def __init__(self, version):
        """
        Initialize the AuthTokenPromotionList

        :param Version version: Version that contains the resource

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionList
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionList
        """
        super(AuthTokenPromotionList, self).__init__(version)

        # Path Solution
        self._solution = {}

    def get(self):
        """
        Constructs a AuthTokenPromotionContext

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        """
        return AuthTokenPromotionContext(self._version, )

    def __call__(self):
        """
        Constructs a AuthTokenPromotionContext

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        """
        return AuthTokenPromotionContext(self._version, )

    def __repr__(self):
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
        """
        Provide a friendly representation

        :returns: Machine friendly representation
<<<<<<< HEAD
        """
        return "<Twilio.Accounts.V1.AuthTokenPromotionList>"
=======
        :rtype: str
        """
        return '<Twilio.Accounts.V1.AuthTokenPromotionList>'


class AuthTokenPromotionPage(Page):

    def __init__(self, version, response, solution):
        """
        Initialize the AuthTokenPromotionPage

        :param Version version: Version that contains the resource
        :param Response response: Response from the API

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionPage
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionPage
        """
        super(AuthTokenPromotionPage, self).__init__(version, response)

        # Path Solution
        self._solution = solution

    def get_instance(self, payload):
        """
        Build an instance of AuthTokenPromotionInstance

        :param dict payload: Payload response from the API

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        """
        return AuthTokenPromotionInstance(self._version, payload, )

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Accounts.V1.AuthTokenPromotionPage>'


class AuthTokenPromotionContext(InstanceContext):

    def __init__(self, version):
        """
        Initialize the AuthTokenPromotionContext

        :param Version version: Version that contains the resource

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        """
        super(AuthTokenPromotionContext, self).__init__(version)

        # Path Solution
        self._solution = {}
        self._uri = '/AuthTokens/Promote'.format(**self._solution)

    def update(self):
        """
        Update the AuthTokenPromotionInstance

        :returns: The updated AuthTokenPromotionInstance
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        """
        payload = self._version.update(method='POST', uri=self._uri, )

        return AuthTokenPromotionInstance(self._version, payload, )

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Accounts.V1.AuthTokenPromotionContext {}>'.format(context)


class AuthTokenPromotionInstance(InstanceResource):

    def __init__(self, version, payload):
        """
        Initialize the AuthTokenPromotionInstance

        :returns: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        """
        super(AuthTokenPromotionInstance, self).__init__(version)

        # Marshaled Properties
        self._properties = {
            'account_sid': payload.get('account_sid'),
            'auth_token': payload.get('auth_token'),
            'date_created': deserialize.iso8601_datetime(payload.get('date_created')),
            'date_updated': deserialize.iso8601_datetime(payload.get('date_updated')),
            'url': payload.get('url'),
        }

        # Context
        self._context = None
        self._solution = {}

    @property
    def _proxy(self):
        """
        Generate an instance context for the instance, the context is capable of
        performing various actions.  All instance actions are proxied to the context

        :returns: AuthTokenPromotionContext for this AuthTokenPromotionInstance
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionContext
        """
        if self._context is None:
            self._context = AuthTokenPromotionContext(self._version, )
        return self._context

    @property
    def account_sid(self):
        """
        :returns: The SID of the Account that the secondary Auth Token was created for
        :rtype: unicode
        """
        return self._properties['account_sid']

    @property
    def auth_token(self):
        """
        :returns: The promoted Auth Token
        :rtype: unicode
        """
        return self._properties['auth_token']

    @property
    def date_created(self):
        """
        :returns: The ISO 8601 formatted date and time in UTC when the resource was created
        :rtype: datetime
        """
        return self._properties['date_created']

    @property
    def date_updated(self):
        """
        :returns: The ISO 8601 formatted date and time in UTC when the resource was last updated
        :rtype: datetime
        """
        return self._properties['date_updated']

    @property
    def url(self):
        """
        :returns: The URI for this resource, relative to `https://accounts.twilio.com`
        :rtype: unicode
        """
        return self._properties['url']

    def update(self):
        """
        Update the AuthTokenPromotionInstance

        :returns: The updated AuthTokenPromotionInstance
        :rtype: twilio.rest.accounts.v1.auth_token_promotion.AuthTokenPromotionInstance
        """
        return self._proxy.update()

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Accounts.V1.AuthTokenPromotionInstance {}>'.format(context)
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
