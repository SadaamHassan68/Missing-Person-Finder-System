<<<<<<< HEAD
from warnings import warn

from twilio.rest.insights.InsightsBase import InsightsBase
from twilio.rest.insights.v1.call import CallList
from twilio.rest.insights.v1.call_summaries import CallSummariesList
from twilio.rest.insights.v1.conference import ConferenceList
from twilio.rest.insights.v1.room import RoomList
from twilio.rest.insights.v1.setting import SettingList


class Insights(InsightsBase):
    @property
    def settings(self) -> SettingList:
        warn(
            "settings is deprecated. Use v1.settings instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.settings

    @property
    def calls(self) -> CallList:
        warn(
            "calls is deprecated. Use v1.calls instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.calls

    @property
    def call_summaries(self) -> CallSummariesList:
        warn(
            "call_summaries is deprecated. Use v1.call_summaries instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.call_summaries

    @property
    def conferences(self) -> ConferenceList:
        warn(
            "conferences is deprecated. Use v1.conferences instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.conferences

    @property
    def rooms(self) -> RoomList:
        warn(
            "rooms is deprecated. Use v1.rooms instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.rooms
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.insights.v1 import V1


class Insights(Domain):

    def __init__(self, twilio):
        """
        Initialize the Insights Domain

        :returns: Domain for Insights
        :rtype: twilio.rest.insights.Insights
        """
        super(Insights, self).__init__(twilio)

        self.base_url = 'https://insights.twilio.com'

        # Versions
        self._v1 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of insights
        :rtype: twilio.rest.insights.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def settings(self):
        """
        :rtype: twilio.rest.insights.v1.setting.SettingList
        """
        return self.v1.settings

    @property
    def calls(self):
        """
        :rtype: twilio.rest.insights.v1.call.CallList
        """
        return self.v1.calls

    @property
    def call_summaries(self):
        """
        :rtype: twilio.rest.insights.v1.call_summaries.CallSummariesList
        """
        return self.v1.call_summaries

    @property
    def conferences(self):
        """
        :rtype: twilio.rest.insights.v1.conference.ConferenceList
        """
        return self.v1.conferences

    @property
    def rooms(self):
        """
        :rtype: twilio.rest.insights.v1.room.RoomList
        """
        return self.v1.rooms

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Insights>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
