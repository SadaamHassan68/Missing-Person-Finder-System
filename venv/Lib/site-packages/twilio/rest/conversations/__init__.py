<<<<<<< HEAD
from warnings import warn

from twilio.rest.conversations.ConversationsBase import ConversationsBase
from twilio.rest.conversations.v1.address_configuration import AddressConfigurationList
from twilio.rest.conversations.v1.configuration import ConfigurationList
from twilio.rest.conversations.v1.conversation import ConversationList
from twilio.rest.conversations.v1.credential import CredentialList
from twilio.rest.conversations.v1.participant_conversation import (
    ParticipantConversationList,
)
from twilio.rest.conversations.v1.role import RoleList
from twilio.rest.conversations.v1.service import ServiceList
from twilio.rest.conversations.v1.user import UserList


class Conversations(ConversationsBase):
    @property
    def configuration(self) -> ConfigurationList:
        warn(
            "configuration is deprecated. Use v1.configuration instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.configuration

    @property
    def address_configurations(self) -> AddressConfigurationList:
        warn(
            "address_configurations is deprecated. Use v1.address_configurations instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.address_configurations

    @property
    def conversations(self) -> ConversationList:
        warn(
            "conversations is deprecated. Use v1.conversations instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.conversations

    @property
    def credentials(self) -> CredentialList:
        warn(
            "credentials is deprecated. Use v1.credentials instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.credentials

    @property
    def participant_conversations(self) -> ParticipantConversationList:
        warn(
            "participant_conversations is deprecated. Use v1.participant_conversations instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.participant_conversations

    @property
    def roles(self) -> RoleList:
        warn(
            "roles is deprecated. Use v1.roles instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.roles

    @property
    def services(self) -> ServiceList:
        warn(
            "services is deprecated. Use v1.services instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.services

    @property
    def users(self) -> UserList:
        warn(
            "users is deprecated. Use v1.users instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.users
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.conversations.v1 import V1


class Conversations(Domain):

    def __init__(self, twilio):
        """
        Initialize the Conversations Domain

        :returns: Domain for Conversations
        :rtype: twilio.rest.conversations.Conversations
        """
        super(Conversations, self).__init__(twilio)

        self.base_url = 'https://conversations.twilio.com'

        # Versions
        self._v1 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of conversations
        :rtype: twilio.rest.conversations.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def configuration(self):
        """
        :rtype: twilio.rest.conversations.v1.configuration.ConfigurationList
        """
        return self.v1.configuration

    @property
    def address_configurations(self):
        """
        :rtype: twilio.rest.conversations.v1.address_configuration.AddressConfigurationList
        """
        return self.v1.address_configurations

    @property
    def conversations(self):
        """
        :rtype: twilio.rest.conversations.v1.conversation.ConversationList
        """
        return self.v1.conversations

    @property
    def credentials(self):
        """
        :rtype: twilio.rest.conversations.v1.credential.CredentialList
        """
        return self.v1.credentials

    @property
    def participant_conversations(self):
        """
        :rtype: twilio.rest.conversations.v1.participant_conversation.ParticipantConversationList
        """
        return self.v1.participant_conversations

    @property
    def roles(self):
        """
        :rtype: twilio.rest.conversations.v1.role.RoleList
        """
        return self.v1.roles

    @property
    def services(self):
        """
        :rtype: twilio.rest.conversations.v1.service.ServiceList
        """
        return self.v1.services

    @property
    def users(self):
        """
        :rtype: twilio.rest.conversations.v1.user.UserList
        """
        return self.v1.users

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Conversations>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
