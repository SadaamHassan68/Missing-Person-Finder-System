<<<<<<< HEAD
from warnings import warn

from twilio.rest.ip_messaging.IpMessagingBase import IpMessagingBase
from twilio.rest.ip_messaging.v2.credential import CredentialList
from twilio.rest.ip_messaging.v2.service import ServiceList


class IpMessaging(IpMessagingBase):
    @property
    def credentials(self) -> CredentialList:
        warn(
            "credentials is deprecated. Use v2.credentials instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v2.credentials

    @property
    def services(self) -> ServiceList:
        warn(
            "services is deprecated. Use v2.services instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v2.services
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.ip_messaging.v1 import V1
from twilio.rest.ip_messaging.v2 import V2


class IpMessaging(Domain):

    def __init__(self, twilio):
        """
        Initialize the IpMessaging Domain

        :returns: Domain for IpMessaging
        :rtype: twilio.rest.ip_messaging.IpMessaging
        """
        super(IpMessaging, self).__init__(twilio)

        self.base_url = 'https://ip-messaging.twilio.com'

        # Versions
        self._v1 = None
        self._v2 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of ip_messaging
        :rtype: twilio.rest.ip_messaging.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def v2(self):
        """
        :returns: Version v2 of ip_messaging
        :rtype: twilio.rest.ip_messaging.v2.V2
        """
        if self._v2 is None:
            self._v2 = V2(self)
        return self._v2

    @property
    def credentials(self):
        """
        :rtype: twilio.rest.ip_messaging.v2.credential.CredentialList
        """
        return self.v2.credentials

    @property
    def services(self):
        """
        :rtype: twilio.rest.ip_messaging.v2.service.ServiceList
        """
        return self.v2.services

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.IpMessaging>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
