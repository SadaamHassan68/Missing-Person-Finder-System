<<<<<<< HEAD
from warnings import warn

from twilio.rest.microvisor.MicrovisorBase import MicrovisorBase
from twilio.rest.microvisor.v1.account_config import AccountConfigList
from twilio.rest.microvisor.v1.account_secret import AccountSecretList
from twilio.rest.microvisor.v1.app import AppList
from twilio.rest.microvisor.v1.device import DeviceList


class Microvisor(MicrovisorBase):
    @property
    def account_configs(self) -> AccountConfigList:
        warn(
            "account_configs is deprecated. Use v1.account_configs instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.account_configs

    @property
    def account_secrets(self) -> AccountSecretList:
        warn(
            "account_secrets is deprecated. Use v1.account_secrets instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.account_secrets

    @property
    def apps(self) -> AppList:
        warn(
            "apps is deprecated. Use v1.apps instead.", DeprecationWarning, stacklevel=2
        )
        return self.v1.apps

    @property
    def devices(self) -> DeviceList:
        warn(
            "devices is deprecated. Use v1.devices instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.devices
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.microvisor.v1 import V1


class Microvisor(Domain):

    def __init__(self, twilio):
        """
        Initialize the Microvisor Domain

        :returns: Domain for Microvisor
        :rtype: twilio.rest.microvisor.Microvisor
        """
        super(Microvisor, self).__init__(twilio)

        self.base_url = 'https://microvisor.twilio.com'

        # Versions
        self._v1 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of microvisor
        :rtype: twilio.rest.microvisor.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def apps(self):
        """
        :rtype: twilio.rest.microvisor.v1.app.AppList
        """
        return self.v1.apps

    @property
    def devices(self):
        """
        :rtype: twilio.rest.microvisor.v1.device.DeviceList
        """
        return self.v1.devices

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Microvisor>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
