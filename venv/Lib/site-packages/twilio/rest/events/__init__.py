<<<<<<< HEAD
from warnings import warn

from twilio.rest.events.EventsBase import EventsBase
from twilio.rest.events.v1.event_type import EventTypeList
from twilio.rest.events.v1.schema import SchemaList
from twilio.rest.events.v1.sink import SinkList
from twilio.rest.events.v1.subscription import SubscriptionList


class Events(EventsBase):
    @property
    def event_types(self) -> EventTypeList:
        warn(
            "event_types is deprecated. Use v1.event_types instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.event_types

    @property
    def schemas(self) -> SchemaList:
        warn(
            "schemas is deprecated. Use v1.schemas instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.schemas

    @property
    def sinks(self) -> SinkList:
        warn(
            "sinks is deprecated. Use v1.sinks instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.sinks

    @property
    def subscriptions(self) -> SubscriptionList:
        warn(
            "subscriptions is deprecated. Use v1.subscriptions instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.subscriptions
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.events.v1 import V1


class Events(Domain):

    def __init__(self, twilio):
        """
        Initialize the Events Domain

        :returns: Domain for Events
        :rtype: twilio.rest.events.Events
        """
        super(Events, self).__init__(twilio)

        self.base_url = 'https://events.twilio.com'

        # Versions
        self._v1 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of events
        :rtype: twilio.rest.events.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def event_types(self):
        """
        :rtype: twilio.rest.events.v1.event_type.EventTypeList
        """
        return self.v1.event_types

    @property
    def schemas(self):
        """
        :rtype: twilio.rest.events.v1.schema.SchemaList
        """
        return self.v1.schemas

    @property
    def sinks(self):
        """
        :rtype: twilio.rest.events.v1.sink.SinkList
        """
        return self.v1.sinks

    @property
    def subscriptions(self):
        """
        :rtype: twilio.rest.events.v1.subscription.SubscriptionList
        """
        return self.v1.subscriptions

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Events>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
