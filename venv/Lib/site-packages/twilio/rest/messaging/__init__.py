<<<<<<< HEAD
from warnings import warn

from twilio.rest.messaging.MessagingBase import MessagingBase
from twilio.rest.messaging.v1.brand_registration import BrandRegistrationList
from twilio.rest.messaging.v1.deactivations import DeactivationsList
from twilio.rest.messaging.v1.domain_certs import DomainCertsList
from twilio.rest.messaging.v1.domain_config import DomainConfigList
from twilio.rest.messaging.v1.domain_config_messaging_service import (
    DomainConfigMessagingServiceList,
)
from twilio.rest.messaging.v1.external_campaign import ExternalCampaignList
from twilio.rest.messaging.v1.linkshortening_messaging_service import (
    LinkshorteningMessagingServiceList,
)
from twilio.rest.messaging.v1.service import ServiceList
from twilio.rest.messaging.v1.usecase import UsecaseList


class Messaging(MessagingBase):
    @property
    def brand_registrations(self) -> BrandRegistrationList:
        warn(
            "brand_registrations is deprecated. Use v1.brand_registrations instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.brand_registrations

    @property
    def deactivations(self) -> DeactivationsList:
        warn(
            "deactivations is deprecated. Use v1.deactivations instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.deactivations

    @property
    def domain_certs(self) -> DomainCertsList:
        warn(
            "domain_certs is deprecated. Use v1.domain_certs instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.domain_certs

    @property
    def domain_config(self) -> DomainConfigList:
        warn(
            "domain_config is deprecated. Use v1.domain_config instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.domain_config

    @property
    def domain_config_messaging_service(self) -> DomainConfigMessagingServiceList:
        warn(
            "domain_config_messaging_service is deprecated. Use v1.domain_config_messaging_service instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.domain_config_messaging_service

    @property
    def external_campaign(self) -> ExternalCampaignList:
        warn(
            "external_campaign is deprecated. Use v1.external_campaign instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.external_campaign

    @property
    def linkshortening_messaging_service(self) -> LinkshorteningMessagingServiceList:
        warn(
            "linkshortening_messaging_service is deprecated. Use v1.linkshortening_messaging_service instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.linkshortening_messaging_service

    @property
    def services(self) -> ServiceList:
        warn(
            "services is deprecated. Use v1.services instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.services

    @property
    def usecases(self) -> UsecaseList:
        warn(
            "usecases is deprecated. Use v1.usecases instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return self.v1.usecases
=======
# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from twilio.base.domain import Domain
from twilio.rest.messaging.v1 import V1


class Messaging(Domain):

    def __init__(self, twilio):
        """
        Initialize the Messaging Domain

        :returns: Domain for Messaging
        :rtype: twilio.rest.messaging.Messaging
        """
        super(Messaging, self).__init__(twilio)

        self.base_url = 'https://messaging.twilio.com'

        # Versions
        self._v1 = None

    @property
    def v1(self):
        """
        :returns: Version v1 of messaging
        :rtype: twilio.rest.messaging.v1.V1
        """
        if self._v1 is None:
            self._v1 = V1(self)
        return self._v1

    @property
    def brand_registrations(self):
        """
        :rtype: twilio.rest.messaging.v1.brand_registration.BrandRegistrationList
        """
        return self.v1.brand_registrations

    @property
    def deactivations(self):
        """
        :rtype: twilio.rest.messaging.v1.deactivation.DeactivationsList
        """
        return self.v1.deactivations

    @property
    def domain_certs(self):
        """
        :rtype: twilio.rest.messaging.v1.domain_cert.DomainCertsList
        """
        return self.v1.domain_certs

    @property
    def domain_config(self):
        """
        :rtype: twilio.rest.messaging.v1.domain_config.DomainConfigList
        """
        return self.v1.domain_config

    @property
    def external_campaign(self):
        """
        :rtype: twilio.rest.messaging.v1.external_campaign.ExternalCampaignList
        """
        return self.v1.external_campaign

    @property
    def services(self):
        """
        :rtype: twilio.rest.messaging.v1.service.ServiceList
        """
        return self.v1.services

    @property
    def tollfree_verifications(self):
        """
        :rtype: twilio.rest.messaging.v1.tollfree_verification.TollfreeVerificationList
        """
        return self.v1.tollfree_verifications

    @property
    def usecases(self):
        """
        :rtype: twilio.rest.messaging.v1.usecase.UsecaseList
        """
        return self.v1.usecases

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Messaging>'
>>>>>>> 0a1ec7f2b5fdf2814bfdd7c1a032c09ad2fe1c0a
